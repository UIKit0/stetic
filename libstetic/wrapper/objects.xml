<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

    <object type="Gtk.Widget,gtk-sharp" wrapper="Stetic.Wrapper.Widget">
	<itemgroups>
	    <itemgroup label="Common Widget Properties">
		<property name="MemberName"
			editor="Stetic.Editor.Identifier"
			description="Name of the member to which this widget is bound." />
		<property name="WidthRequest" min="-1" />
		<property name="HeightRequest" min="-1" />
		<property name="Visible" glade-override="true" />
		<property name="Sensitive" glade-override="true" />
		<property name="Tooltip" label="Tooltip" glade-name="tooltip"
			  description="Tooltip for this widget"
			  translatable="true" />
		<property name="CanDefault" />
		<property name="HasDefault" glade-override="true" />
		<property name="CanFocus" />
		<property name="HasFocus" />
		<property name="Events" />
		<property name="ExtensionEvents" />
		<property name="Name" internal="true"
			min="1"
			init-with-name="true" 
			editor="Stetic.Editor.Identifier"/>
	    </itemgroup>
	</itemgroups>
    <signals>
    	<itemgroup label="Common Widget Signals">
		<signal name="AccelCanActivate" />
		<signal name="AccelClosuresChanged" />
		<signal name="ButtonPressEvent" />
		<signal name="ButtonReleaseEvent" />
		<signal name="ChildNotified" />
		<signal name="ClientEvent" />
		<signal name="ConfigureEvent" />
		<signal name="DeleteEvent" />
		<signal name="DestroyEvent" />
		<signal name="DirectionChanged" />
		<signal name="DragBegin" />
		<signal name="DragDataDelete"/>
		<signal name="DragDataGet" />
		<signal name="DragDataReceived" />
		<signal name="DragDrop" />
		<signal name="DragEnd" />
		<signal name="DragLeave" />
		<signal name="DragMotion" />
		<signal name="EnterNotifyEvent" />
		<signal name="ExposeEvent" />
		<signal name="Focused" />
		<signal name="FocusGrabbed" />
		<signal name="FocusInEvent" />
		<signal name="FocusOutEvent" />
		<signal name="GrabNotify" />
		<signal name="HelpShown" />
		<signal name="Hidden" />
		<signal name="HierarchyChanged" />
		<signal name="KeyPressEvent" />
		<signal name="KeyReleaseEvent" />
		<signal name="LeaveNotifyEvent" />
		<signal name="MapEvent" />
		<signal name="Mapped" />
		<signal name="MnemonicActivated" />
		<signal name="MotionNotifyEvent" />
		<signal name="NoExposeEvent" />
		<signal name="ParentSet" />
		<signal name="PopupMenu" />
		<signal name="PropertyNotifyEvent" />
		<signal name="ProximityInEvent" />
		<signal name="ProximityOutEvent" />
		<signal name="Realized" />
		<signal name="ScreenChanged" />
		<signal name="ScrollEvent" />
		<signal name="SelectionClearEvent" />
		<signal name="SelectionGet" />
		<signal name="SelectionNotifyEvent" />
		<signal name="SelectionReceived" />
		<signal name="SelectionRequestEvent" />
		<signal name="Shown" />
		<signal name="SizeAllocated" />
		<signal name="SizeRequested" />
		<signal name="StateChanged" />
		<signal name="StyleSet" />
		<signal name="UnmapEvent" />
		<signal name="Unmapped" />
		<signal name="Unrealized" />
		<signal name="VisibilityNotifyEvent" />
		<signal name="WidgetEvent" />
		<signal name="WidgetEventAfter" />
		<signal name="WindowStateEvent" />
    	</itemgroup>
    </signals>

	<glade-transform>
	    <!-- "events" property has extra spaces around "|"s -->
	    <import>
		<xsl:template match="widget/property[@name='events']/text()">
		    <xsl:call-template name="GtkWidget_fixevents">
			<xsl:with-param name="string" select="." />
		    </xsl:call-template>
		</xsl:template>
		<xsl:template name="GtkWidget_fixevents">
		    <xsl:param name="string"/>
		    <xsl:choose>
			<xsl:when test="contains($string, ' | ')">
			    <xsl:value-of select="substring-before($string, ' | ')"/>
			    <xsl:text>|</xsl:text>
			    <xsl:call-template name="GtkWidget_fixevents">
				<xsl:with-param name="string" select="substring-after($string, ' | ')"/>
			    </xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
			    <xsl:value-of select="$string" />
			</xsl:otherwise>
		    </xsl:choose>
		</xsl:template>
	    </import>
	    <export>
		<xsl:template match="widget/property[@name='events']/text()">
		    <xsl:call-template name="GtkWidget_breakevents">
			<xsl:with-param name="string" select="." />
		    </xsl:call-template>
		</xsl:template>
		<xsl:template name="GtkWidget_breakevents">
		    <xsl:param name="string"/>
		    <xsl:choose>
			<xsl:when test="contains($string, '|')">
			    <xsl:value-of select="substring-before($string, '|')"/>
			    <xsl:text> | </xsl:text>
			    <xsl:call-template name="GtkWidget_breakevents">
				<xsl:with-param name="string" select="substring-after($string, '|')"/>
			    </xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
			    <xsl:value-of select="$string" />
			</xsl:otherwise>
		    </xsl:choose>
		</xsl:template>
	    </export>
	</glade-transform>
    </object>

    <object type="Gtk.Container,gtk-sharp" wrapper="Stetic.Wrapper.Container">
	<itemgroups>
    	<itemgroup name="Commands">
			<command name="IncreaseBorderWidth" label="Increase Border Width" icon="res:inc-border.png" />
			<command name="DecreaseBorderWidth" label="Decrease Border Width" icon="res:dec-border.png" />
	    </itemgroup>
	</itemgroups>
	<signals>
    	<itemgroup label="Container Signals">
			<signal name="Added" />
			<signal name="FocusChildSet" />
			<signal name="Removed" />
			<signal name="ResizeChecked" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</signals>
    </object>
    
    <object type="Gtk.Container+ContainerChild,gtk-sharp" wrapper="Stetic.Wrapper.Container+ContainerChild" />

    <object type="Gtk.Window,gtk-sharp" wrapper="Stetic.Wrapper.Window"
	    label="Window" icon="window.png" palette-category="window">
	<itemgroups>
	    <itemgroup label="Window Properties">
		<property name="Title" init-with-name="true" translatable="true" />
		<property name="Icon" />
		<property name="Type" glade-override="true" />
		<property name="TypeHint" glade-override="true" />
		<property name="WindowPosition" />
		<property name="Modal" glade-override="true" />
		<property name="BorderWidth" />
	    </itemgroup>
	    <itemgroup label="Window Size Properties" name="Size">
		<property name="Resizable" />
		<property name="AllowGrow" />
		<property name="AllowShrink" />
		<property name="DefaultWidth" min="-1"/>
		<property name="DefaultHeight" min="-1"/>
	    </itemgroup>
	    <itemgroup label="Miscellaneous Window Properties" name="Misc">
		<property name="AcceptFocus" />
		<property name="Decorated" />
		<property name="DestroyWithParent" />
		<!-- 2.6 <property name="FocusOnMap" /> -->
		<property name="Gravity" />
		<property name="Role" />
		<property name="SkipPagerHint" />
		<property name="SkipTaskbarHint" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="Window Signals">
		<signal name="DefaultActivated" />
		<signal name="FrameEvent" />
		<signal name="FocusActivated" />
		<signal name="KeysChanged" />
		<signal name="MoveFocus" />
		<signal name="SetFocus" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>

    <object type="Gtk.Misc,gtk-sharp" wrapper="Stetic.Wrapper.Misc">
	<itemgroups>
	    <itemgroup label="Miscellaneous Alignment Properties">
		<property name="Xpad" />
		<property name="Ypad" />
		<property name="Xalign" />
		<property name="Yalign" />
		<command name="AlignLeft" label="Align Left" icon="gtk-justify-left" />
		<command name="AlignCenter" label="Align Center" icon="gtk-justify-center" />
		<command name="AlignRight" label="Align Right" icon="gtk-justify-right" />
	    </itemgroup>
	</itemgroups>
    </object>

    <object type="Gtk.Paned,gtk-sharp" wrapper="Stetic.Wrapper.Paned">
	<itemgroups>
	    <itemgroup label="Pane Properties">
		<property name="Position" />
		<property name="BorderWidth" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="Paned Signals">
		<signal name="CycleChildFocus" />
		<signal name="ToggleHandleFocus" />
		<signal name="AcceptPosition" />
		<signal name="CancelPosition" />
		<signal name="MoveHandle" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>
    <object type="Gtk.Paned+PanedChild,gtk-sharp">
	<itemgroups>
	    <itemgroup label="Pane Child Layout">
		<property name="Resize" />
		<property name="Shrink" />
	    </itemgroup>
	</itemgroups>
    </object>

    <object type="Gtk.Range,gtk-sharp" wrapper="Stetic.Wrapper.Range">
	<itemgroups>
	    <itemgroup label="Range Properties">
		<property name="UpdatePolicy" />
		<property name="Inverted" />
		<property name="Adjustment.Lower" />
		<property name="Adjustment.Upper" />
		<property name="Adjustment.PageIncrement" />
		<property name="Adjustment.PageSize" />
		<property name="Adjustment.StepIncrement" />
		<property name="Adjustment.Value" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
    	<itemgroup label="Range Signals">
		<signal name="AdjustBounds" />
		<signal name="ValueChanged" />
		<signal name="MoveSlider" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</signals>
    </object>

    <object type="Gtk.Scale,gtk-sharp" wrapper="Stetic.Wrapper.Scale">
	<itemgroups>
	    <itemgroup label="Scale Properties">
		<property name="Adjustment.Lower" />
		<property name="Adjustment.Upper" />
		<property name="Adjustment.PageIncrement" />
		<property name="Adjustment.PageSize" />
		<property name="Adjustment.StepIncrement" />
		<property name="Adjustment.Value" />
		<property name="DrawValue" ignore-default="true" />
		<property name="Digits">
		    <disabled-if name="DrawValue" value="false" />
		</property>
		<property name="ValuePos" ignore-default="true" >
		    <disabled-if name="DrawValue" value="false" />
		</property>
		<property name="Inverted" />
		<property name="UpdatePolicy" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
    	<itemgroup label="Scale Signals">
		<signal name="FormatValue" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Range" />
	</signals>
    </object>

    <object type="Gtk.Alignment,gtk-sharp" label="Alignment" icon="alignment.png" 
    		 init-properties="Xalign Yalign Xscale Yscale" palette-category="container">
	<itemgroups>
	    <itemgroup label="Alignment Properties">
		<property name="Xscale" />
		<property name="Yscale" />
		<property name="Xalign" />
		<property name="Yalign" />
		<property name="LeftPadding" />
		<property name="TopPadding" />
		<property name="RightPadding" />
		<property name="BottomPadding" />
		<property name="BorderWidth" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>

    <object type="Gtk.Arrow,gtk-sharp"
	    label="Arrow" icon="arrow.png" palette-category="widget" init-properties="ArrowType ShadowType">
	<itemgroups>
	    <itemgroup label="Arrow Properties">
		<property name="ArrowType" />
		<property name="ShadowType" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Misc" important="true" />
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	</signals>
    </object>

    <object type="Gtk.Bin,gtk-sharp" wrapper="Stetic.Wrapper.Bin"
    	label="Bin" icon="custom.png">
	<itemgroups>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	</signals>
    </object>

    <object type="Gtk.Box,gtk-sharp" wrapper="Stetic.Wrapper.Box">
	<itemgroups>
	    <itemgroup label="Box Properties">
			<property name="Homogeneous" />
			<property name="Spacing" />
			<property name="BorderWidth" />
	    </itemgroup>
	</itemgroups>
	<contextmenu>
	    <command name="InsertBefore" label="Insert Before"
		     description="Insert an empty row/column before the selected one" />
	    <command name="InsertAfter" label="Insert After"
		     description="Insert an empty row/column after the selected one" />
	</contextmenu>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>
    
    <object type="Gtk.Box+BoxChild,gtk-sharp" wrapper="Stetic.Wrapper.Box+BoxChild">
	<itemgroups>
	    <itemgroup label="Box Child Layout">
		<property name="PackType" />
		<property name="Position" ignore-default="true"/>
		<property name="AutoSize" label="Auto Size"
			  description="If set, the other packing properties for this cell will be automatically adjusted as other widgets are added to and removed from the container" />
		<property name="Expand">
		    <disabled-if name="AutoSize" value="true" />
		</property>
		<property name="Fill">
		    <disabled-if name="AutoSize" value="true" />
		    <disabled-if name="Expand" value="false" />
		</property>
		<property name="Padding" />
		<command name="BoxExpand" label="Expand" icon="res:box-expand.png" />
		<command name="BoxFill" label="Fill" icon="res:box-fill.png" />
	    </itemgroup>
	</itemgroups>
    </object>

    <object type="Gtk.ButtonBox,gtk-sharp" wrapper="Stetic.Wrapper.ButtonBox">
	<itemgroups>
	    <itemgroup label="Button Box Properties">
		<property name="Size" label="Size"
			  description="The number of buttons"
			  min="0" />
		<property name="LayoutStyle" />
		<property name="Spacing" />
		<property name="BorderWidth" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
	<contextmenu>
	    <command name="InsertBefore" label="Insert Button Before"
		     description="Insert a new button before the selected one" />
	    <command name="InsertAfter" label="Insert Button After"
		     description="Insert a new button after the selected one" />
	</contextmenu>
    </object>
    <object type="Gtk.ButtonBox+ButtonBoxChild,gtk-sharp" wrapper="Stetic.Wrapper.ButtonBox+ButtonBoxChild">
	<itemgroups>
	    <itemgroup label="Button Box Child Layout">
		<property name="InDialog" internal="true" />
		<property name="Secondary">
		    <invisible-if name="InDialog" value="true" />
		</property>
		<property name="Position" />
		<property name="Expand" />
		<property name="Fill">
		    <disabled-if name="Expand" value="false" />
		</property>
		<property name="Padding" />
	    </itemgroup>
	</itemgroups>
    </object>

    <object type="Gtk.Button,gtk-sharp" wrapper="Stetic.Wrapper.Button"
	    label="Button" icon="button.png" palette-category="widget">
	<itemgroups>
	    <itemgroup label="Button Properties">
		<property name="UseStock" internal="true" />
		<property name="Type" label="Button Type"
			  description="The type of button" />
		<property name="StockId" label="Stock Item"
			  description="The stock button ID"
			  editor="Stetic.Editor.StockItem">
		    <invisible-if name="Type" value="TextOnly" />
		    <invisible-if name="Type" value="TextAndIcon" />
		    <invisible-if name="Type" value="Custom" />
		</property>
		<property name="Icon" label="Icon"
			  description="The icon to display in the button"
			  editor="Stetic.Editor.ImageSelector">
		    <invisible-if name="Type" value="StockItem" />
		    <invisible-if name="Type" value="TextOnly" />
		    <invisible-if name="Type" value="Custom" />
		</property>
		<property name="Label" translatable="true">
		    <invisible-if name="Type" value="StockItem" />
		    <invisible-if name="Type" value="Custom" />
		</property>
		<property name="UseUnderline">
		    <invisible-if name="Type" value="StockItem" />
		    <invisible-if name="Type" value="Custom" />
		</property>
		<property name="IsDialogButton" internal="true" />
		<property name="ResponseId" label="Response Id" glade-name="response_id"
			  description="The response ID to emit when this button is clicked."
			  editor="Stetic.Editor.ResponseId">
		    <invisible-if name="IsDialogButton" value="false" />
		</property>
	    </itemgroup>
	    <itemgroup label="Extra Button Properties" name="Extra">
		<property name="FocusOnClick" />
		<property name="Relief" />
		<property name="Xalign" />
		<property name="Yalign" />
		<property name="BorderWidth" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="Button Signals">
		<signal name="Activated" />
		<signal name="Clicked" />
		<signal name="Entered" />
		<signal name="Left" />
		<signal name="Pressed" />
		<signal name="Released" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>

    <object type="Gtk.Calendar,gtk-sharp"
	    label="Calendar" icon="calendar.png" palette-category="widget">
	<itemgroups>
	    <itemgroup label="Calendar Properties">
		<property name="DisplayOptions" glade-name="display_options" internal="true" />
		<property name="ShowHeading" />
		<property name="ShowDayNames" />
		<property name="ShowWeekNumbers" />
		<property name="NoMonthChange" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
    	<itemgroup label="Calendar Signals">
		<signal name="PrevMonth" />
		<signal name="DaySelected" />
		<signal name="NextMonth" />
		<signal name="MonthChanged" />
		<signal name="PrevYear" />
		<signal name="DaySelectedDoubleClick" />
		<signal name="NextYear" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</signals>
    </object>

    <object type="Gtk.CheckButton,gtk-sharp" wrapper="Stetic.Wrapper.CheckButton"
	    label="Check Box" icon="checkbutton.png" palette-category="widget"
	    hexpandable="true">
	<itemgroups>
	    <itemgroup label="Check Box Properties">
		<property name="Label" init-with-name="true" translatable="true" />
		<property name="Active" />
		<property name="Inconsistent" />
		<property name="DrawIndicator" />
		<property name="HasLabel" internal="true" />
		<command name="RestoreLabel" label="Restore Label" icon="res:add-check-label.png"
			 description="Restore the button's label">
		    <disabled-if name="HasLabel" value="true" />
		</command>
		<command name="RemoveLabel" label="Remove Label" icon="res:remove-check-label.png"
			 description="Remove the button's label">
		    <disabled-if name="HasLabel" value="false" />
		</command>
	    </itemgroup>
	    <itemgroup ref="Gtk.Button.Extra" />
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Button" />
	</signals>
	<contextmenu>
	    <command ref="RemoveLabel" />
	    <command ref="RestoreLabel" />
	</contextmenu>
    </object>

    <object type="Gtk.MenuItem,gtk-sharp" wrapper="Stetic.Wrapper.MenuItem"
	    label="Menu Item">
	<itemgroups>
	    <itemgroup label="Menu Item Properties">
		<property name="Label" translatable="true" glade-name="label" label="Label"
			  description="The text of the menu item" />
		<property name="UseUnderline" glade-name="use_underline" label="Use Underline"
			  description="If set, an underline in the text indicates the next character should be used for the mnemonic accelerator key" />
		<property name="HasSubmenu" internal="true" />
		<property name="Accelerator" editor="Stetic.Editor.Accelerator">
		    <disabled-if name="HasSubmenu" value="true" />
		</property>
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
    	<itemgroup label="Menu Item Signals">
		<signal name="Activated" />
		<signal name="ActivateItem" />
		<signal name="Deselected" />
		<signal name="Selected" />
		<signal name="Toggled" />
		<signal name="ToggleSizeAllocated" />
		<signal name="ToggleSizeRequested" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>

	<glade-transform>
	    <!-- A regular MenuItem with no label is really a SeparatorMenuItem -->
	    <import>
		<xsl:template match="widget[@class='GtkMenuItem']">
		    <xsl:choose>
			<xsl:when test="not(property[@name='label']) and not(property[@name='stock_item'])">
			    <widget class="GtkSeparatorMenuItem">
				<xsl:attribute name="id"><xsl:value-of select="@id" /></xsl:attribute>
				<xsl:apply-templates select="node()" />
			    </widget>
			</xsl:when>
			<xsl:otherwise>
			    <xsl:copy>
				<xsl:apply-templates select="@*|node()" />
			    </xsl:copy>
			</xsl:otherwise>
		    </xsl:choose>
		</xsl:template>
	    </import>
	</glade-transform>
    </object>

    <object type="Gtk.CheckMenuItem,gtk-sharp" label="Check Menu Item">
	<itemgroups>
	    <itemgroup label="Check Menu Item Properties">
		<property ref="Gtk.MenuItem.Label" />
		<property ref="Gtk.MenuItem.UseUnderline" />
		<property ref="Gtk.MenuItem.Accelerator" />
		<property name="Active" />
		<property name="Inconsistent" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
    	<itemgroup label="Check Menu Item Signals">
		<signal name="Toggled" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.MenuItem" />
	</signals>
    </object>

    <object type="Gtk.ColorButton,gtk-sharp" wrapper="Stetic.Wrapper.ColorButton"
	    label="Color Button" icon="colorbutton.png" palette-category="widget">
	<itemgroups>
	    <itemgroup label="Color Button Properties">
		<property name="Title" translatable="true" />
		<property name="UseAlpha" internal="true" />
		<property name="Alpha" min="-1" max="65535" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Button.Extra" />
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="Color Button Signals">
		<signal name="ColorSet" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.Button" />
	</signals>
    </object>

    <object type="Gtk.ComboBox,gtk-sharp" wrapper="Stetic.Wrapper.ComboBox"
	    label="Combo Box" icon="combo.png" palette-category="widget">
	<itemgroups>
	    <itemgroup label="Combo Box Properties">
		<property name="IsTextCombo" label="Text ComboBox" 
		      description="Checked if the combo box displays a list of strings" />
		<property name="Items" translatable="true" label="Items" glade-name="items"
			  description="The items to display in the Combo Box, one per line"
			  editor="Stetic.Editor.Text">
		    <disabled-if name="IsTextCombo" value="false" />
		</property>
		<property name="Active" min="-1"/>
		<!-- 2.6 <property name="AddTearoffs" /> -->
		<!-- 2.6 <property name="FocusOnClick" /> -->
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
    	<itemgroup label="ComboBox Signals">
		<signal name="Changed" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>

    <object type="Gtk.ComboBoxEntry,gtk-sharp" wrapper="Stetic.Wrapper.ComboBoxEntry" 
	    label="Combo Box Entry" palette-category="widget">
	<itemgroups>
	    <itemgroup label="Combo Box Entry Properties">
		<property ref="Gtk.ComboBox.Items" />
		<property name="Active" min="-1"/>
		<!-- 2.6 <property name="AddTearoffs" /> -->
		<!-- 2.6 <property name="HasFrame" /> -->
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.ComboBox" />
	</signals>
    </object>

    <object type="Gtk.Dialog,gtk-sharp" wrapper="Stetic.Wrapper.Dialog"
	    label="Dialog Box" icon="dialog.png" palette-category="window">
	<itemgroups>
	    <itemgroup label="Dialog Properties">
		<property ref="Gtk.Window.Title" />
		<property name="Buttons" label="Number of Buttons"
			  description="The number of buttons"
			  min="1" />
		<property name="HelpButton" label="Help Button"
			  description="Whether or not to display a 'Help' button" />
		<property ref="Gtk.Window.Icon" />
		<property ref="Gtk.Window.WindowPosition" />
		<property ref="Gtk.Window.Modal" />
		<property name="BorderWidth" />
	    </itemgroup>
	    <itemgroup label="Miscellaneous Dialog Properties" name="Misc">
		<property name="HasSeparator" />
		<property name="AcceptFocus" />
		<property name="Decorated" />
		<property name="DestroyWithParent" />
		<property name="Gravity" />
		<property name="Role" />
		<property name="SkipPagerHint" />
		<property name="SkipTaskbarHint" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Window.Size" />
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="Dialog Signals">
		<signal name="Close" />
		<signal name="Response" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.Window" />
	</signals>
	<internal-children>
	    <property name="VBox" glade-name="vbox" />
	    <property name="ActionArea" glade-name="action_area" />
	</internal-children>
    </object>

    <object type="Gtk.DrawingArea,gtk-sharp"
	    label="Drawing Area" icon="drawingarea.png" palette-category="widget"
	    hexpandable="true" vexpandable="true">
	<itemgroups>
	    <itemgroup ref="Gtk.Widget" important="false" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	</signals>
    </object>

    <object type="Gtk.Entry,gtk-sharp"
	    label="Entry" icon="entry.png" palette-category="widget"
	    hexpandable="true" wrapper="Stetic.Wrapper.Entry">
	<itemgroups>
	    <itemgroup label="Entry Properties">
		<property name="Text" translatable="true" />
		<property name="Editable" />
		<property name="WidthChars" min="-1"/>
		<property name="MaxLength" />
		<property name="HasFrame" />
		<property name="ActivatesDefault" />
		<property name="Visibility" />
	    </itemgroup>
	    <itemgroup label="Extra Entry Properties" name="Extra">
		<property name="InvisibleChar" />
		<property name="Xalign" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
    	<itemgroup label="Entry Signals">
		<signal name="InsertAtCursor" />
		<signal name="ToggleOverwrite" />
		<signal name="PopulatePopup" />
		<signal name="ClipboardCopied" />
		<signal name="ClipboardPasted" />
		<signal name="DeleteFromCursor" />
		<signal name="Activated" />
		<signal name="ClipboardCut" />
		<signal name="MoveCursor" />
		<signal name="Changed" />
		<signal name="TextDeleted" />
		<signal name="TextInserted" />
		<signal name="EditingDone" />
		<signal name="WidgetRemoved" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</signals>
    </object>

    <object type="Gtk.EventBox,gtk-sharp"
	    label="Event Box" icon="eventbox.png" palette-category="widget">
	<itemgroups>
	    <itemgroup label="Event Box Properties">
		<property name="AboveChild" />
		<property name="VisibleWindow" />
		<property name="BorderWidth" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>

    <object type="Gtk.Expander,gtk-sharp" wrapper="Stetic.Wrapper.Expander"
	    label="Expander" icon="expander.png" palette-category="container">
	<itemgroups>
	    <itemgroup label="Expander Properties">
		<property name="Expanded" />
		<property name="Spacing" />
		<property name="BorderWidth" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="Expander Signals">
		<signal name="Activated" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>

    <object type="Gtk.FontButton,gtk-sharp" wrapper="Stetic.Wrapper.FontButton"
	    label="Font Button" icon="fontbutton.png" palette-category="widget">
	<itemgroups>
	    <itemgroup label="Font Button Properties">
		<property name="Title" translatable="true" />
		<property name="FontName" />
		<property name="ShowSize" />
		<property name="ShowStyle" />
		<property name="UseFont" />
		<property name="UseSize">
		    <disabled-if name="UseFont" value="false" />
		</property>
	    </itemgroup>
	    <itemgroup ref="Gtk.Button.Extra" />
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="Font Button Signals">
		<signal name="FontSet" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.Button" />
	</signals>
    </object>

    <object type="Gtk.Frame,gtk-sharp" wrapper="Stetic.Wrapper.Frame"
	    label="Frame" icon="frame.png" palette-category="container">
	<itemgroups>
	    <itemgroup label="Frame Properties">
		<property name="ShadowType" />
		<property name="LabelXalign" />
		<property name="LabelYalign" />
		<property name="BorderWidth" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>

    <object type="Gtk.HBox,gtk-sharp"
	    label="HBox" icon="hbox.png" palette-category="container">
	<itemgroups>
	    <itemgroup ref="Gtk.Box" />
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
	<contextmenu ref="Gtk.Box" />
    </object>

    <object type="Gtk.HButtonBox,gtk-sharp"
	    label="HButtonBox" icon="hbuttonbox.png" palette-category="container"
	    hexpandable="true">
	<itemgroups>
	    <itemgroup ref="Gtk.ButtonBox" />
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
	<contextmenu ref="Gtk.ButtonBox" />
	<glade-transform>
	    <!-- If a child has a "response_id" of -11 (GTK_RESPONSE_HELP), it should be packed with the "secondary" property -->
	    <import>
		<xsl:template match="widget[@class='GtkHButtonBox']/child/widget[@class='GtkButton']">
		    <xsl:copy>
			<xsl:apply-templates select="@*|node()"/>
		    </xsl:copy>
		    <xsl:if test="number (property[@name='response_id']) = -11">
			<packing>
			    <property name="secondary">True</property>
			</packing>
		    </xsl:if>
		</xsl:template>
	    </import>
	</glade-transform>
    </object>

    <object type="Gtk.HPaned,gtk-sharp"
	    label="HPaned" icon="hpaned.png" palette-category="container"
	    hexpandable="true">
	<itemgroups>
	    <itemgroup ref="Gtk.Paned" />
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.Paned" />
	</signals>
    </object>

    <object type="Gtk.HScale,gtk-sharp" wrapper="Stetic.Wrapper.HScale"
	    label="Horizontal Scale" icon="hscale.png" palette-category="widget"
	    hexpandable="true">
	<itemgroups>
	    <itemgroup ref="Gtk.Scale" />
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Range" />
	    <itemgroup ref="Gtk.Scale" />
	</signals>
    </object>

    <object type="Gtk.HScrollbar,gtk-sharp" wrapper="Stetic.Wrapper.HScrollbar"
	    label="Horizontal Scrollbar" icon="hscrollbar.png" palette-category="widget"
	    hexpandable="true">
	<itemgroups>
	    <itemgroup ref="Gtk.Range" />
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Range" />
	    <itemgroup ref="Gtk.Scale" />
	</signals>
    </object>

    <object type="Gtk.HSeparator,gtk-sharp"
	    label="Horizontal Separator" icon="hseparator.png" palette-category="widget"
	    hexpandable="true">
	<itemgroups>
	    <itemgroup ref="Gtk.Widget" important="false" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	</signals>
    </object>

    <object type="Gtk.Image,gtk-sharp" wrapper="Stetic.Wrapper.Image"
	    label="Image" icon="image.png" palette-category="widget">
	<itemgroups>
	    <itemgroup label="Image Properties">
		<property name="Pixbuf" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Misc" />
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	</signals>
    </object>

    <object type="Gtk.ImageMenuItem,gtk-sharp" wrapper="Stetic.Wrapper.ImageMenuItem"
	    label="Image Menu Item">
	<itemgroups>
	    <itemgroup label="Image Menu Item Properties">
		<property name="Image" editor="Stetic.Editor.Image" />
		<property ref="Gtk.MenuItem.Label" />
		<property ref="Gtk.MenuItem.UseUnderline" />
		<property ref="Gtk.MenuItem.Accelerator" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.MenuItem" />
	</signals>
    </object>

    <object type="Gtk.Label,gtk-sharp" wrapper="Stetic.Wrapper.Label"
	    label="Label" icon="label.png" palette-category="widget">
	<itemgroups>
	    <itemgroup label="Label Properties">
		<property name="LabelProp" init-with-name="true" translatable="true" />
		<property name="UseMarkup" />
		<property name="UseUnderline" />
		<property name="Wrap" />
		<property name="MnemonicWidget" glade-override="true" editor="Stetic.Editor.WidgetSelector"/>
		<property name="Justify" />
		<property name="Selectable" />
		<!-- 2.6 <property name="Ellipsize" /> -->
		<!-- 2.6 <property name="WidthChars" /> -->
		<!-- 2.6 <property name="SingleLineMode" /> -->
		<!-- 2.6 <property name="Angle" /> -->
	    </itemgroup>
	    <itemgroup ref="Gtk.Misc" />
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
    	<itemgroup label="Label Signals">
		<signal name="CopyClipboard" />
		<signal name="MoveCursor" />
		<signal name="PopulatePopup" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</signals>
    </object>

    <object type="Gtk.MenuBar,gtk-sharp" wrapper="Stetic.Wrapper.MenuBar"
	    label="Menu Bar" icon="menubar.png" palette-category="widget">
	<itemgroups>
	    <itemgroup ref="Gtk.Widget" important="false" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="Menu Bar Signals">
		<signal name="Deactivated" />
		<signal name="SelectionDone" />
		<signal name="MoveCurrent" />
		<signal name="ActivateCurrent" />
		<signal name="Canceled" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>

    <object type="Gtk.Menu,gtk-sharp" label="Menu" icon="menu.png">
	<itemgroups>
	    <itemgroup ref="Gtk.Widget" important="false" />
	</itemgroups>
	<signals>
    	<itemgroup label="Menu Signals">
		<signal name="Deactivated" />
		<signal name="SelectionDone" />
		<signal name="MoveCurrent" />
		<signal name="ActivateCurrent" />
		<signal name="Canceled" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>
    <object type="Gtk.Menu+MenuChild,gtk-sharp" />

    <object type="Stetic.MessageDialog" cname="GtkMessageDialog" wrapper="Stetic.Wrapper.Window"
	    label="Message Dialog" icon="messagedialog.png" palette-category="window">
	<itemgroups>
	    <itemgroup label="Message Dialog Properties">
		<property ref="Gtk.Window.Title" />
		<property name="MessageType" label="Message Type"
			  description="The type of message dialog this is" />
		<property name="PrimaryText" translatable="true" label="Primary Text"
			  description="The primary message text" />
		<property name="SecondaryText" translatable="true" label="Secondary Text"
			  description="The secondary message text" />
		<property name="Buttons" label="Buttons"
			  description="The buttons to offer" />
		<property ref="Gtk.Window.Icon" />
		<property ref="Gtk.Window.WindowPosition" />
		<property ref="Gtk.Window.Modal" />
		<property name="BorderWidth" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Dialog.Misc" />
	    <itemgroup ref="Gtk.Window.Size" />
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.Window" />
	    <itemgroup ref="Gtk.Dialog" />
	</signals>
    </object>

    <object type="Gtk.Notebook,gtk-sharp" wrapper="Stetic.Wrapper.Notebook"
	    label="Notebook" icon="notebook.png" palette-category="container">
	<itemgroups>
	    <itemgroup label="Notebook Properties">
		<property name="EnablePopup" />
		<property name="TabPos" />
		<property name="ShowBorder" />
		<property name="ShowTabs" />
		<property name="Scrollable" />
		<property name="BorderWidth" />
		<command name="InsertBefore" label="Insert Page Before"
			 description="Insert a blank page before this one">
		    <disabled-if check="CheckInsertBefore" />
		</command>
		<command name="InsertAfter" label="Insert Page After"
			 description="Insert a blank page after this one" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="Notebook Signals">
		<signal name="FocusTab" />
		<signal name="ChangeCurrentPage" />
		<signal name="MoveFocusOut" />
		<signal name="SwitchPage" />
		<signal name="SelectPage" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
	<contextmenu>
	    <command name="PreviousPage" label="Go to Previous Page"
		     description="Show the previous page">
		    <disabled-if check="CheckPreviousPage" />
		</command>
	    <command name="NextPage" label="Go to Next Page"
		     description="Show the next page">
		    <disabled-if check="CheckNextPage" />
		</command>
	    <command name="DeletePage" label="Delete Page"
		     description="Delete the current page">
		    <disabled-if check="CheckDeletePage" />
		</command>
	    <command name="SwapPrevious" label="Swap with Previous Page"
		     description="Swap the contents of this page with the contents of the previous page">
		    <disabled-if check="CheckPreviousPage" />
		</command>
	    <command name="SwapNext" label="Swap with Next Page"
		     description="Swap the contents of this page with the contents of the next page">
		    <disabled-if check="CheckNextPage" />
		</command>
	    <command ref="InsertBefore" />
	    <command ref="InsertAfter" />
	</contextmenu>
    </object>
    <object type="Gtk.Notebook+NotebookChild,gtk-sharp">
	<itemgroups>
	    <itemgroup label="Notebook Child Layout">
		<property name="Position" />
		<property name="TabPack" />
		<property name="TabExpand" />
		<property name="TabFill" />
		<property name="MenuLabel" translatable="true" />
	    </itemgroup>
	</itemgroups>
    </object>

    <object type="Gtk.OptionMenu,gtk-sharp" wrapper="Stetic.Wrapper.OptionMenu"
	    label="Option Menu" icon="optionmenu.png" deprecated="true">
	<itemgroups>
	    <itemgroup label="Option Menu Properties">
		<property name="Active" glade-name="history" label="Active"
			  description="The active menu item" min="0" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="Option Menu Signals">
		<signal name="Changed" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.Button" />
	</signals>
	<internal-children>
	    <property name="Menu" glade-name="menu" />
	</internal-children>
    </object>

    <object type="Gtk.ProgressBar,gtk-sharp"
	    label="Progress Bar" icon="progressbar.png" palette-category="widget"
	    hexpandable="true">
	<itemgroups>
	    <itemgroup label="Progress Bar Properties">
		<property name="Orientation" />
		<property name="Text" translatable="true" />
		<property name="Fraction" />
		<property name="PulseStep" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	</signals>
    </object>

    <object type="Gtk.RadioButton,gtk-sharp" wrapper="Stetic.Wrapper.RadioButton"
	    label="Radio Button" icon="radiobutton.png" palette-category="widget"
	    hexpandable="true" init-properties="Label">
	<itemgroups>
	    <itemgroup label="Radio Button Properties">
		<property ref="Gtk.CheckButton.Label" />
		<property name="Group" label="Group"
			  description="The name of the radio button group that this button belongs to"
			  editor="Stetic.Editor.GroupPicker" />
		<property ref="Gtk.CheckButton.Active" />
		<property ref="Gtk.CheckButton.Inconsistent" />
		<property ref="Gtk.CheckButton.DrawIndicator" />
		<command ref="Gtk.CheckButton.RemoveLabel" />
		<command ref="Gtk.CheckButton.RestoreLabel" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Button.Extra" />
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
    	<itemgroup label="Radio Button Signals">
		<signal name="Toggled" />
		<signal name="GroupChanged" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.Button" />
	</signals>
	<contextmenu>
	    <command ref="Gtk.CheckButton.RemoveLabel" />
	    <command ref="Gtk.CheckButton.RestoreLabel" />
	</contextmenu>
    </object>
<!--
    <object type="Gtk.RadioMenuItem,gtk-sharp" wrapper="Stetic.Wrapper.RadioMenuItem"
	    label="Radio Menu Item">
	<itemgroups>
	    <itemgroup label="Radio Menu Item Properties">
		<property ref="Gtk.MenuItem.Label" />
		<property ref="Gtk.MenuItem.UseUnderline" />
		<property ref="Gtk.MenuItem.Accelerator" />
		<property name="Group" label="Group"
			  description="The name of the radio menu item group that this menu item belongs to"
			  editor="Stetic.Editor.GroupPicker" />
		<property name="Active" />
		<property name="Inconsistent" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
    	<itemgroup label="Radio Menu Item Signals">
		<signal name="Toggled" />
		<signal name="GroupChanged" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.MenuItem" />
	</signals>
    </object>

    <object type="Gtk.ToolItem,gtk-sharp" wrapper="Stetic.Wrapper.Widget">
	<signals>
    	<itemgroup label="Tool Item Signals">
		<signal name="ToolbarReconfigured" />
		<signal name="CreateMenuProxy" />
		<signal name="TooltipSet" />
	    </itemgroup>
	</signals>
    </object>

    <object type="Gtk.ToolButton,gtk-sharp" wrapper="Stetic.Wrapper.ToolButton"
	    label="Toolbar Button" icon="button.png" palette-category="toolbaritem">
	<itemgroups>
	    <itemgroup label="Toolbar Button Properties">
		<property name="Type" label="Button Type"
			  description="The type of button" />
		<property name="StockId" label="Stock Item"
			  description="The stock button ID"
			  editor="Stetic.Editor.StockItem">
		    <invisible-if name="Type" value="TextAndIcon" />
		</property>
		<property name="Icon" label="Icon"
			  description="The icon to display in the button"
			  editor="Stetic.Editor.ImageSelector">
		    <invisible-if name="Type" value="StockItem" />
		</property>
		<property name="Label" translatable="true" />
		<property name="UseUnderline">
		    <invisible-if name="Type" value="StockItem" />
		</property>
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
    	<itemgroup label="Tool Button Signals">
		<signal name="Clicked" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.ToolItem" />
	</signals>
    </object>

    <object type="Gtk.RadioToolButton,gtk-sharp" wrapper="Stetic.Wrapper.RadioToolButton"
	    label="Toolbar Radio Button" icon="radiobutton.png" palette-category="toolbaritem">
	<itemgroups>
	    <itemgroup label="Toolbar Radio Button Properties">
		<property ref="Gtk.ToolButton.Icon" />
		<property ref="Gtk.ToolButton.Label" />
		<property ref="Gtk.ToolButton.UseUnderline" />
		<property name="Group" label="Group"
			  description="The name of the radio toolbar item group that this toolbar item belongs to"
			  editor="Stetic.Editor.GroupPicker" />
		<property name="Active" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
    	<itemgroup label="Radio Tool Button Signals">
		<signal name="Toggled" />
		<signal name="Clicked" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.ToolItem" />
	</signals>
    </object>
-->

    <object type="Gtk.ScrolledWindow,gtk-sharp" wrapper="Stetic.Wrapper.ScrolledWindow"
	    label="Scrolled Window" icon="scrolledwindow.png" palette-category="container"
	    hexpandable="true" vexpandable="true">
	<itemgroups>
	    <itemgroup label="Scrolled Window Properties">
		<property name="VscrollbarPolicy" />
		<property name="HscrollbarPolicy" />
		<property name="ShadowType" />
		<property name="WindowPlacement" />
		<property name="BorderWidth" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="Scrolled Window Signals">
		<signal name="MoveFocusOut" />
		<signal name="ScrollChild" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>

    <object type="Gtk.SeparatorMenuItem,gtk-sharp"
	    label="Separator Menu Item" icon="hseparator.png">
	<itemgroups>
	    <itemgroup ref="Gtk.Widget" important="false" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.MenuItem" />
	</signals>
    </object>

<!--    <object type="Gtk.SeparatorToolItem,gtk-sharp"
	    label="Toolbar Separator" icon="vseparator.png" palette-category="toolbaritem">
	<itemgroups>
	    <itemgroup label="Toolbar Separator Properties">
		<property name="Draw" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.ToolItem" />
	</signals>
    </object>
-->

    <object type="Gtk.SpinButton,gtk-sharp" wrapper="Stetic.Wrapper.SpinButton"
	    label="Spin Button" icon="spinbutton.png" palette-category="widget" init-properties="Lower Upper StepIncrement">
	<itemgroups>
	    <itemgroup label="Range Properties">
		<property name="Adjustment.Lower" />
		<property name="Adjustment.Upper" />
		<property name="Adjustment.PageIncrement" />
		<property name="Adjustment.PageSize" />
		<property name="Adjustment.StepIncrement" />
	    </itemgroup>
	    <itemgroup label="Spin Button Properties" important="true">
		<property name="ClimbRate" />
		<property name="Digits" />
		<property name="Numeric" />
		<property name="SnapToTicks" />
		<property name="UpdatePolicy" />
		<property name="Value" />
		<property name="Wrap" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
    	<itemgroup label="Spin Button Signals">
		<signal name="ChangeValue" />
		<signal name="Input" />
		<signal name="ValueChanged" />
		<signal name="Output" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Entry" />
	</signals>
    </object>

    <object type="Gtk.Statusbar,gtk-sharp"
	    label="Statusbar" icon="statusbar.png" palette-category="widget"
	    hexpandable="true">
	<itemgroups>
	    <itemgroup label="Status Bar Properties">
		<property name="HasResizeGrip" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="Statusbar Signals">
		<signal name="TextPopped" />
		<signal name="TextPushed" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>

    <object type="Gtk.Table,gtk-sharp" wrapper="Stetic.Wrapper.Table"
	    label="Table" icon="table.png" palette-category="container" init-properties="NRows NColumns Homogeneous">
	<itemgroups>
	    <itemgroup label="Table Properties">
		<property name="NRows" min="1"/>
		<property name="NColumns" min="1"/>
		<property name="Homogeneous" />
		<property name="RowSpacing" />
		<property name="ColumnSpacing" />
		<property name="BorderWidth" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
	<contextmenu>
	    <command name="InsertRowBefore" label="Insert Row Before"
		     description="Insert an empty row above the selected row" />
	    <command name="InsertRowAfter" label="Insert Row After"
		     description="Insert an empty row below the selected row" />
	    <command name="InsertColumnBefore" label="Insert Column Before"
		     description="Insert an empty column before the selected column" />
	    <command name="InsertColumnAfter" label="Insert Column After"
		     description="Insert an empty column after the selected column" />
	    <command name="DeleteRow" label="Delete Row"
		     description="Delete the selected row" />
	    <command name="DeleteColumn" label="Delete Column"
		     description="Delete the selected column" />
	</contextmenu>

	<glade-transform>
	    <!-- Child packing options are non-standard ("expand" instead of "GTK_EXPAND") -->
	    <import>
		<xsl:template match="widget[@class='GtkTable']/child/packing/property[@name='x_options' or @name='y_options']/text()">
		    <xsl:call-template name="GtkTable_fixoptions">
			<xsl:with-param name="string" select="." />
		    </xsl:call-template>
		</xsl:template>
		<xsl:template name="GtkTable_fixoptions">
		    <xsl:param name="string"/>
		    <xsl:choose>
			<xsl:when test="contains($string, '|')">
			    <xsl:call-template name="GtkTable_fixoptions">
				<xsl:with-param name="string" select="substring-before($string, '|')"/>
			    </xsl:call-template>
			    <xsl:text>|</xsl:text>
			    <xsl:call-template name="GtkTable_fixoptions">
				<xsl:with-param name="string" select="substring-after($string, '|')"/>
			    </xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
			    <xsl:text>GTK_</xsl:text>
			    <xsl:value-of select="translate($string,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')"/>
			</xsl:otherwise>
		    </xsl:choose>
		</xsl:template>
	    </import>
	    <export>
		<xsl:template match="widget[@class='GtkTable']/child/packing/property[@name='x_options' or @name='y_options']/text()">
		    <xsl:call-template name="GtkTable_breakoptions">
			<xsl:with-param name="options" select="." />
		    </xsl:call-template>
		</xsl:template>
		<xsl:template name="GtkTable_breakoptions">
		    <xsl:param name="string"/>
		    <xsl:choose>
			<xsl:when test="contains($string, '|')">
			    <xsl:call-template name="GtkTable_breakoptions">
				<xsl:with-param name="string" select="substring-before($string, '|')"/>
			    </xsl:call-template>
			    <xsl:text>|</xsl:text>
			    <xsl:call-template name="GtkTable_breakoptions">
				<xsl:with-param name="string" select="substring-after($string, '|')"/>
			    </xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
			    <xsl:value-of select="translate(substring-after($string, 'GTK_'),'ABCDEFGHIJKLMNOPQRSTUVWXYZ','abcdefghijklmnopqrstuvwxyz')"/>
			</xsl:otherwise>
		    </xsl:choose>
		</xsl:template>
	    </export>
	</glade-transform>
    </object>
    <object type="Gtk.Table+TableChild,gtk-sharp" wrapper="Stetic.Wrapper.Table+TableChild">
	<itemgroups>
	    <itemgroup label="Table Child Layout">
		<property name="TopAttach" />
		<property name="BottomAttach" />
		<property name="LeftAttach" />
		<property name="RightAttach" />
		<property name="XPadding" />
		<property name="YPadding" />
		<property name="AutoSize" label="Auto Size"
			  description="If set, the other packing properties for this cell will be automatically adjusted as other widgets are added to and removed from the container" />
		<property name="XOptions" internal="true" />
		<property name="YOptions" internal="true" />
		<property name="XExpand" label="Expand Horizontally"
			  description="Whether or not the table cell should expand horizontally">
		    <disabled-if name="AutoSize" value="true" />
		</property>
		<property name="XFill" label="Fill Horizontally"
			  description="Whether or not the widget should expand to fill its cell horizontally">
		    <disabled-if name="AutoSize" value="true" />
		    <disabled-if name="XExpand" value="true" />
		</property>
		<property name="XShrink" label="Shrink Horizontally"
			  description="Whether or not the table cell should shrink horizontally">
		    <disabled-if name="AutoSize" value="true" />
		</property>
		<property name="YExpand" label="Expand Vertically"
			  description="Whether or not the table cell should expand vertically">
		    <disabled-if name="AutoSize" value="true" />
		</property>
		<property name="YFill" label="Fill Vertically"
			  description="Whether or not the widget should expand to fill its cell vertically">
		    <disabled-if name="AutoSize" value="true" />
		    <disabled-if name="YExpand" value="true" />
		</property>
		<property name="YShrink" label="Shrink Vertically"
			  description="Whether or not the table cell should shrink vertically">
		    <disabled-if name="AutoSize" value="true" />
		</property>
		<command name="CellXExpand" label="Expand Horizontally" icon="res:cell-expand-h.png" />
		<command name="CellXFill" label="Fill Horizontally" icon="res:cell-fill-h.png" />
		<command name="CellYExpand" label="Expand Vertically" icon="res:cell-expand-v.png" />
		<command name="CellYFill" label="Fill Vertically" icon="res:cell-fill-v.png" />
	    </itemgroup>
	</itemgroups>
    </object>

    <object type="Gtk.TextView,gtk-sharp" wrapper="Stetic.Wrapper.TextView"
	    label="Text View" icon="textview.png" palette-category="widget"
	    hexpandable="true" vexpandable="true">
	<itemgroups>
	    <itemgroup label="Text View Properties">
		<property name="Editable" />
		<property name="CursorVisible" />
		<property name="Overwrite" />
		<property name="AcceptsTab" />
		<property name="Tabs" />
		<property name="Text" translatable="true" label="Text" glade-name="text"
			  description="The initial text to display in the Text View"
			  editor="Stetic.Editor.Text" />
		<property name="Justification" />
		<property name="WrapMode" />
		<property name="PixelsAboveLines" />
		<property name="PixelsBelowLines" />
		<property name="PixelsInsideWrap" />
		<property name="LeftMargin" />
		<property name="RightMargin" />
		<property name="Indent" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
    	<itemgroup label="Text View Signals">
		<signal name="PasteClipboard" />
		<signal name="InsertAtCursor" />
		<signal name="CutClipboard" />
		<signal name="ToggleOverwrite" />
		<signal name="PageHorizontally" />
		<signal name="MoveFocus" />
		<signal name="CopyClipboard" />
		<signal name="DeleteFromCursor" />
		<signal name="PopulatePopup" />
		<signal name="MoveCursor" />
		<signal name="SetAnchor" />
		<signal name="ScrollAdjustmentsSet" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>

    <object type="Gtk.ToggleButton,gtk-sharp"
	    label="Toggle Button" icon="togglebutton.png" palette-category="widget">
	<itemgroups>
	    <itemgroup label="Toggle Button Properties">
		<property ref="Gtk.Button.Type" />
		<property ref="Gtk.Button.StockId" />
		<property ref="Gtk.Button.Icon" />
		<!-- 2.6 <property ref="Gtk.Button.ThemedIcon" /> -->
		<property ref="Gtk.Button.Label" />
		<property ref="Gtk.Button.UseUnderline" />
		<property name="Active" />
		<property name="Inconsistent" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Button.Extra" />
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="Toggle Button Signals">
		<signal name="Toggled" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.Button" />
	</signals>
    </object>

<!--    <object type="Gtk.ToggleToolButton,gtk-sharp" wrapper="Stetic.Wrapper.ToggleToolButton"
	    label="Toolbar Toggle Button" icon="checkbutton.png" palette-category="toolbaritem">
	<itemgroups>
	    <itemgroup label="Toolbar Toggle Button Properties">
		<property ref="Gtk.ToolButton.Icon" />
		<property ref="Gtk.ToolButton.Label" />
		<property ref="Gtk.ToolButton.UseUnderline" />
		<property name="Active" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
    	<itemgroup label="Toggle Tool Button Signals">
		<signal name="Toggled" />
		<signal name="Clicked" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.ToolItem" />
	</signals>
    </object>
-->
    <object type="Gtk.Toolbar,gtk-sharp" wrapper="Stetic.Wrapper.ActionToolbarWrapper"
	    label="Toolbar" icon="toolbar.png" palette-category="widget">
	<itemgroups>
	    <itemgroup label="Tool Bar Properties">
		<property name="Orientation" />
		<property name="ShowArrow" />
		<property name="ToolbarStyle" />
		<property name="Tooltips" />
		<property name="IconSize" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="Toolbar Signals">
		<signal name="OrientationChanged" />
		<signal name="PopupContextMenu" />
		<signal name="StyleChanged" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>
<!--
    <object type="Gtk.Toolbar+ToolbarChild,gtk-sharp" wrapper="Stetic.Wrapper.Toolbar+ToolbarChild">
	<itemgroups>
	    <itemgroup label="Tool Bar Child Properties">
		<property name="Homogeneous" />
		<property name="Expand" />
		<property name="ToolItem" internal="true" />
		<property name="ToolItem.IsImportant" />
		<property name="ToolItem.VisibleHorizontal" />
		<property name="ToolItem.VisibleVertical" />
	    </itemgroup>
	</itemgroups>
    </object>
-->
    <object type="Gtk.TreeView,gtk-sharp"
	    label="Tree View" icon="treeview.png" palette-category="widget"
	    hexpandable="true" vexpandable="true">
	<itemgroups>
	    <itemgroup label="Tree View Properties">
		<property name="EnableSearch" />
		<property name="FixedHeightMode" />
		<property name="HeadersVisible" />
		<property name="Reorderable" />
		<property name="RulesHint" />
		<property name="SearchColumn" min="-1"/>
		<property name="Model" />
		<!-- 2.6 <property name="HoverSelection" /> -->
		<!-- 2.6 <property name="HoverExpand" /> -->
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="Tree View Signals">
		<signal name="CursorChanged" />
		<signal name="TestCollapseRow" />
		<signal name="RowActivated" />
		<signal name="ExpandCollapseCursorRow" />
		<signal name="ColumnsChanged" />
		<signal name="UnselectAll" />
		<signal name="SelectCursorParent" />
		<signal name="RowCollapsed" />
		<signal name="SelectAll" />
		<signal name="SelectCursorRow" />
		<signal name="TestExpandRow" />
		<signal name="StartInteractiveSearch" />
		<signal name="MoveCursor" />
		<signal name="RowExpanded" />
		<signal name="ToggleCursorRow" />
		<signal name="ScrollAdjustmentsSet" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>

    <object type="Gtk.VBox,gtk-sharp"
	    label="VBox" icon="vbox.png" palette-category="container">
	<itemgroups>
	    <itemgroup ref="Gtk.Box" />
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
	<contextmenu ref="Gtk.Box" />
    </object>

    <object type="Gtk.VButtonBox,gtk-sharp"
	    label="VButtonBox" icon="vbuttonbox.png" palette-category="container"
	    vexpandable="true">
	<itemgroups>
	    <itemgroup ref="Gtk.ButtonBox" />
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
	<contextmenu ref="Gtk.ButtonBox" />
    </object>

    <object type="Gtk.Viewport,gtk-sharp" wrapper="Stetic.Wrapper.Viewport"
	    label="Viewport" icon="viewport.png">
	<itemgroups>
	    <itemgroup label="Viewport Properties">
		<property name="ShadowType" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="Viewport Signals">
		<signal name="ScrollAdjustmentsSet" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>

    <object type="Gtk.VPaned,gtk-sharp"
	    label="VPaned" icon="vpaned.png" palette-category="container"
	    vexpandable="true">
	<itemgroups>
	    <itemgroup ref="Gtk.Paned" />
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.Paned" />
	</signals>
    </object>

    <object type="Gtk.VScale,gtk-sharp" wrapper="Stetic.Wrapper.VScale"
	    label="Vertical Scale" icon="vscale.png" palette-category="widget"
	    vexpandable="true">
	<itemgroups>
	    <itemgroup ref="Gtk.Scale" />
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Range" />
	    <itemgroup ref="Gtk.Scale" />
	</signals>
    </object>

    <object type="Gtk.VScrollbar,gtk-sharp" wrapper="Stetic.Wrapper.VScrollbar"
	    label="Vertical Scrollbar" icon="vscrollbar.png" palette-category="widget"
	    vexpandable="true">
	<itemgroups>
	    <itemgroup ref="Gtk.Range" />
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Range" />
	    <itemgroup ref="Gtk.Scale" />
	</signals>
    </object>

    <object type="Gtk.VSeparator,gtk-sharp"
	    label="Vertical Separator" icon="vseparator.png" palette-category="widget"
	    vexpandable="true">
	<itemgroups>
	    <itemgroup ref="Gtk.Widget" important="false" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	</signals>
    </object>

    <object type="Stetic.Custom" cname="Custom"
	    label="Custom Widget" icon="custom.png" palette-category="widget">
	<itemgroups>
	    <itemgroup label="Custom Widget Properties">
		<property name="CreationFunction" glade-name="creation_function" />
		<property name="LastModificationTime" glade-name="last_modification_time" internal="true" />
		<property name="String1" glade-name="string1" />
		<property name="String2" glade-name="string2" />
		<property name="Int1" glade-name="int1" />
		<property name="Int2" glade-name="int2" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
    </object>

<!-- 2.6
    <object type="Gtk.AboutDialog,gtk-sharp" wrapper="Stetic.Wrapper.AboutDialog"
	    label="About Dialog" icon="aboutdialog.png" palette-category="window">
	<itemgroups>
	    <itemgroup label="About Dialog Properties">
		<property name="Name" translatable="true" />
		<property name="Version" translatable="true" />
		<property name="Logo" glade-override="true"
			  editor="Stetic.Editor.ImageFile" />
		<property name="Comments" translatable="true" />
		<property name="Copyright" translatable="true" />
		<property name="Website" translatable="true" />
		<property name="WebsiteLabel" translatable="true" />
		<property name="Authors" translatable="true" />
		<property name="Documenters" translatable="true" />
		<property name="Artists" translatable="true" />
		<property name="TranslatorCredits" translatable="true" />
		<property name="License" translatable="true" editor="Stetic.Editor.Text" />
		<property ref="Gtk.Window.Icon" />
		<property ref="Gtk.Window.WindowPosition" />
		<property ref="Gtk.Window.Modal" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Dialog.Misc" />
	    <itemgroup ref="Gtk.Window.Size" />
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
    </object>
-->

    <object type="Gtk.ColorSelection,gtk-sharp" wrapper="Stetic.Wrapper.Widget"
	    label="Color Selection" icon="colorselection.png" palette-category="widget"
	    hexpandable="true" vexpandable="true">
	<itemgroups>
	    <itemgroup label="Color Selection Properties">
		<property name="HasPalette" />
		<property name="HasOpacityControl" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="Color Selection Signals">
		<signal name="ColorChanged" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>

    <object type="Gtk.ColorSelectionDialog,gtk-sharp" wrapper="Stetic.Wrapper.Window"
	    label="Color Selection Dialog" icon="colorselectiondialog.png" palette-category="window">
	<itemgroups>
	    <itemgroup label="Color Selection Dialog Properties">
		<property ref="Gtk.Window.Title" />
		<property ref="Gtk.Window.Icon" />
		<property ref="Gtk.Window.WindowPosition" />
		<property ref="Gtk.Window.Modal" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Dialog.Misc" />
	    <itemgroup ref="Gtk.Window.Size" />
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.Window" />
	    <itemgroup ref="Gtk.Dialog" />
	</signals>
	<internal-children>
	    <property name="ColorSelection" glade-name="color_selection" />
	    <property name="OkButton" glade-name="ok_button" />
	    <property name="CancelButton" glade-name="cancel_button" />
	    <property name="HelpButton" glade-name="help_button" />
	</internal-children>
    </object>

    <object type="Gtk.FileChooserWidget,gtk-sharp" wrapper="Stetic.Wrapper.Widget"
	    label="File Chooser Widget" icon="fileselection.png" palette-category="widget"
	    hexpandable="true" vexpandable="true" init-properties="Action">
	<itemgroups>
	    <itemgroup label="File Chooser Widget Properties">
		<property name="Action" />
		<property name="LocalOnly" />
		<property name="SelectMultiple">
		    <disabled-if name="Action" value="Save" />
		    <disabled-if name="Action" value="CreateFolder" />
		</property>
		<!-- 2.6 <property name="ShowHidden" /> -->
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="File Chooser Widget Signals">
		<signal name="SelectionChanged" />
		<signal name="FileActivated" />
		<signal name="UpdatePreview" />
		<signal name="CurrentFolderChanged" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>

    <!-- 2.6
    <object type="Gtk.FileChooserButton,gtk-sharp" wrapper="Stetic.Wrapper.Widget"
	    label="File Chooser Button" icon="fileselection.png" palette-category="widget"
	    hexpandable="true">
	<itemgroups>
	    <itemgroup label="File Chooser Button Properties">
		<property name="Title" translatable="true" />
		<property name="Action" />
		<property name="LocalOnly" />
		<property name="SelectMultiple">
		    <disabled-if name="Action" value="Save" />
		    <disabled-if name="Action" value="CreateFolder" />
		</property>
		<property name="ShowHidden" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	</itemgroups>
    </object>
    -->

    <object type="Gtk.FileChooserDialog,gtk-sharp"
	    label="File Chooser Dialog" icon="fileselection.png" palette-category="window">
	<itemgroups>
	    <itemgroup label="File Chooser Dialog Properties">
		<property ref="Gtk.Window.Title" />
		<property name="Action" />
		<property name="LocalOnly" />
		<property name="SelectMultiple">
		    <disabled-if name="Action" value="Save" />
		    <disabled-if name="Action" value="CreateFolder" />
		</property>
		<!-- 2.6 <property name="ShowHidden" /> -->
		<property ref="Gtk.Window.Icon" />
		<property ref="Gtk.Window.WindowPosition" />
		<property ref="Gtk.Window.Modal" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Dialog.Misc" />
	    <itemgroup ref="Gtk.Window.Size" />
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
    	<itemgroup label="File Chooser Dialog Signals">
		<signal name="SelectionChanged" />
		<signal name="FileActivated" />
		<signal name="UpdatePreview" />
		<signal name="CurrentFolderChanged" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.Window" />
	    <itemgroup ref="Gtk.Dialog" />
	</signals>
	<internal-children>
	    <property name="VBox" glade-name="vbox" />
	    <property name="ActionArea" glade-name="action_area" />
	</internal-children>
    </object>

    <object type="Gtk.FontSelection,gtk-sharp" wrapper="Stetic.Wrapper.Widget"
	    label="Font Selection" icon="fontselection.png" palette-category="widget"
	    hexpandable="true" vexpandable="true">
	<itemgroups>
	    <itemgroup label="Font Selection Properties">
		<property name="FontName" />
		<property name="PreviewText" translatable="true" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	</signals>
    </object>

    <object type="Gtk.FontSelectionDialog,gtk-sharp" wrapper="Stetic.Wrapper.FontSelectionDialog"
	    label="Font Selection Dialog" icon="fontselectiondialog.png" palette-category="window">
	<itemgroups>
	    <itemgroup label="Font Selection Dialog Properties">
		<property ref="Gtk.Window.Title" />
		<property ref="Gtk.Window.Icon" />
		<property ref="Gtk.Window.WindowPosition" />
		<property ref="Gtk.Window.Modal" />
	    </itemgroup>
	    <itemgroup ref="Gtk.Dialog.Misc" />
	    <itemgroup ref="Gtk.Window.Size" />
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container.Commands" />
	</itemgroups>
	<signals>
	    <itemgroup ref="Gtk.Widget" />
	    <itemgroup ref="Gtk.Container" />
	    <itemgroup ref="Gtk.Window" />
	    <itemgroup ref="Gtk.Dialog" />
	</signals>
	<internal-children>
	    <property name="FontSelection" glade-name="font_selection" />
	    <property name="OkButton" glade-name="ok_button" />
	    <property name="CancelButton" glade-name="cancel_button" />
	    <property name="ApplyButton" glade-name="help_button" />
	</internal-children>
    </object>

    <object type="Stetic.ErrorWidget" wrapper="Stetic.ErrorWidgetWrapper">
    </object>

    <object type="Gtk.Action,gtk-sharp" label="Action" wrapper="Stetic.Wrapper.Action"
    	init-properties="Name Label Tooltip StockId" >
	<itemgroups>
	    <itemgroup label="Action Properties">
		<property name="Name" editor="Stetic.Editor.Identifier" min="1"/>
		<property name="Type" />
		<property name="Accelerator" editor="Stetic.Editor.Accelerator" />
		<property name="HideIfEmpty" />
		<property name="IsImportant" />
		<property name="Label" />
		<property name="Sensitive" />
		<property name="ShortLabel" default=""/>
		<property name="StockId" editor="Stetic.Editor.StockItem"/>
		<property name="Tooltip" />
		<property name="Visible" />
		<property name="VisibleHorizontal" />
		<property name="VisibleVertical" />
		<property name="DrawAsRadio">
		    <invisible-if name="Type" value="Action" />
		</property>
		<property name="Active">
		    <invisible-if name="Type" value="Action" />
		</property>
		<property name="Value">
		    <invisible-if name="Type" value="Action" />
		    <invisible-if name="Type" value="Toggle" />
		</property>
	    </itemgroup>
	</itemgroups>
    <signals>
    	<itemgroup label="Action Signals">
		<signal name="Activated" />
		<signal name="Changed" />
		<signal name="Toggled" />
		</itemgroup>
	</signals>
    </object>

    <enum type="Gdk.ExtensionMode,gdk-sharp">
	<value name="None" label="None"
	       description="No extension events are desired" />
	<value name="All" label="All"
	       description="All extension events are desired" />
	<value name="Cursor" label="Only if cursor displayed"
	       description="Extension events are desired only if a cursor will be displayed for the device" />
    </enum>

    <enum type="Gdk.EventMask,gdk-sharp">
	<value name="ExposureMask" label="Expose"
	       description="Receive expose events" />
	<value name="PointerMotionMask" label="All pointer motion"
	       description="Receive all pointer motion events" />
	<value name="PointerMotionHintMask" label="Requested pointer motion"
	       description="Receive pointer motion events when requested" />
	<value name="ButtonMotionMask" label="Pointer motion w/ any button"
	       description="Receive pointer motion events while any button is pressed" />
	<value name="Button1MotionMask" label="Pointer motion w/ button 1"
	       description="Receive pointer motion events while button 1 is pressed" />
	<value name="Button2MotionMask" label="Pointer motion w/ button 2"
	       description="Receive pointer motion events while button 2 is pressed" />
	<value name="Button3MotionMask" label="Pointer motion w/ button 3"
	       description="Receive pointer motion events while button 3 is pressed" />
	<value name="ButtonPressMask" label="Button press"
	       description="Receive button press events" />
	<value name="ButtonReleaseMask" label="Button release"
	       description="Receive button release events" />
	<value name="KeyPressMask" label="Key press"
	       description="Receive key press events" />
	<value name="KeyReleaseMask" label="Key release"
	       description="Receive key release events" />
	<value name="EnterNotifyMask" label="Window enter"
	       description="Receive window enter events" />
	<value name="LeaveNotifyMask" label="Window leave"
	       description="Receive window leave events" />
	<value name="FocusChangeMask" label="Focus change"
	       description="Receive focus change events" />
	<value name="StructureMask" label="Window structure change"
	       description="Receive events about window configuration change" />
	<value name="PropertyChangeMask" label="Property change"
	       description="Receive property change events" />
	<value name="VisibilityNotifyMask" label="Visibility change"
	       description="Receive visibility change events" />
	<value name="ProximityInMask" label="Proximity in"
	       description="Receive proximity in events" />
	<value name="ProximityOutMask" label="Proximity out"
	       description="Receive proximity out events" />
	<value name="SubstructureMask" label="Window substructure change"
	       description="Receive events about window configuration changes of child windows" />
	<value name="ScrollMask" label="Scroll"
	       description="Receive scroll events" />
	<value name="AllEventsMask" />
    </enum>

    <enum type="Gdk.Gravity,gdk-sharp">
	<value name="NorthWest" label="Northwest"
	       description="The reference point is at the top left corner" />
	<value name="North" label="North"
	       description="The reference point is at the middle of the top edge" />
	<value name="NorthEast" label="Northeast"
	       description="The reference point is at the top right corner" />
	<value name="West" label="West"
	       description="The reference point is at the middle of the left edge" />
	<value name="Center" label="Center"
	       description="The reference point is at the center of the window" />
	<value name="East" label="East"
	       description="The reference point is at the middle of the right edge" />
	<value name="SouthWest" label="Southwest"
	       description="The reference point is at the lower left corner" />
	<value name="South" label="South"
	       description="The reference point is at the middle of the lower edge" />
	<value name="SouthEast" label="Southeast"
	       description="The reference point is at the lower right corner" />
	<value name="Static" label="Static"
	       description="The reference point is at the top left corner of the window itself, ignoring window manager decorations" />
    </enum>

    <enum type="Gdk.WindowTypeHint,gdk-sharp">
	<value name="Normal" label="Normal"
	       description="Normal toplevel window" />
	<value name="Dialog" label="Dialog"
	       description="Dialog window" />
	<value name="Menu" label="Menu"
	       description="Window used to implement a menu" />
	<value name="Toolbar" label="Toolbar"
	       description="Window used to implement a toolbar" />
	<value name="Splashscreen" label="Splash screen"
	       description="Window used to display a splash screen" />
	<value name="Utility" label="Utility"
	       description="Utility windows which are not detached toolbars or dialogs" />
	<value name="Dock" label="Dock"
	       description="Used for creating dock or panel windows" />
	<value name="Desktop" label="Desktop"
	       description="Used for creating the desktop background window" />
    </enum>

    <enum type="Gtk.ArrowType,gtk-sharp">
	<value name="Up" label="Up"
	       description="Up" />
	<value name="Down" label="Down"
	       description="Down" />
	<value name="Left" label="Left"
	       description="Left" />
	<value name="Right" label="Right"
	       description="Right" />
    </enum>

    <enum type="Gtk.AttachOptions,gtk-sharp">
	<value name="Expand" label="Expand"
	       description="The widget should expand to take up any extra space in its container that has been allocated" />
	<value name="Shrink" label="Shrink"
	       description="The widget should shrink as and when possible" />
	<value name="Fill" label="Fill"
	       description="The widget should fill the space allocated to it" />
    </enum>

    <enum type="Gtk.ButtonBoxStyle,gtk-sharp">
	<value name="DefaultStyle" label="Default"
	       description="Default packing" />
	<value name="Spread" label="Spread"
	       description="Buttons are evenly spread across the ButtonBox" />
	<value name="Edge" label="Edge"
	       description="Buttons are placed at the edges of the ButtonBox" />
	<value name="Start" label="Start"
	       description="Buttons are grouped towards the start (left or top) of the box" />
	<value name="End" label="End"
	       description="Buttons are grouped toward the end (right or bottom) of the box" />
    </enum>

    <enum type="Gtk.ButtonsType,gtk-sharp">
	<value name="None" label="None"
	       description="No buttons at all" />
	<value name="Ok" label="OK"
	       description="an OK button" />
	<value name="Close" label="Close"
	       description="a Close button" />
	<value name="Cancel" label="Cancel"
	       description="a Cancel button" />
	<value name="YesNo" label="Yes / No"
	       description="Yes and No buttons" />
	<value name="OkCancel" label="OK / Cancel"
	       description="OK and Cancel buttons" />
    </enum>

    <enum type="Gtk.CornerType,gtk-sharp">
	<value name="TopLeft" label="Top Left"
	       description="Place the scrollbars on the right and bottom of the contents" />
	<value name="BottomLeft" label="Bottom Left"
	       description="Place the scrollbrs on the top and right of the contents" />
	<value name="TopRight" label="Top Right"
	       description="Place the scrollbrs on the left and bottom of the contents" />
	<value name="BottomRight" label="Bottom Right"
	       description="Place the scrollbrs on the top and left of the contents" />
    </enum>

    <enum type="Gtk.FileChooserAction,gtk-sharp">
	<value name="Open" label="Open"
	       description="Open mode. The file chooser will only let the user pick an existing file." />
	<value name="Save" label="Save"
	       description="Save mode. The file chooser will let the user pick an existing file, or type in a new filename." />
	<value name="SelectFolder" label="Select Folder"
	       description="Open mode for selecting folders. The file chooser will let the user pick an existing folder." />
	<value name="CreateFolder" label="Create Folder"
	       description="Mode for creating a new folder. The file chooser will let the user name an existing or new folder." />
    </enum>

    <enum type="Gtk.IconSize,gtk-sharp">
	<value name="Invalid" label="Invalid"
	       description="Invalid" />
	<value name="Menu" label="Menu"
	       description="The size of an icon an a menu item" />
	<value name="SmallToolbar" label="Small Toolbar"
	       description="The size of an icon in a small toolbar" />
	<value name="LargeToolbar" label="Large Toolbar"
	       description="The size of an icon in a large toolbar" />
	<value name="Button" label="Button"
	       description="The size of an icon in a button" />
	<value name="Dnd" label="Drag and Drop"
	       description="The size of an icon in a drag-and-drop operation" />
	<value name="Dialog" label="Dialog"
	       description="The size of an icon in a dialog box" />
    </enum>

    <enum type="Gtk.Justification,gtk-sharp">
	<value name="Left" label="Left"
	       description="The text is placed at the left edge of the label" />
	<value name="Right" label="Right"
	       description="The text is placed at the right edge of the label" />
	<value name="Center" label="Center"
	       description="The text is placed in the center of the label" />
	<value name="Fill" label="Fill"
	       description="The text is distributed across the label" />
    </enum>

    <enum type="Gtk.MessageType,gtk-sharp">
	<value name="Info" label="Info"
	       description="Informational message" />
	<value name="Warning" label="Warning"
	       description="Non-fatal warning message" />
	<value name="Question" label="Question"
	       description="Question requiring a choice" />
	<value name="Error" label="Error"
	       description="Fatal error message" />
    </enum>

    <enum type="Gtk.Orientation,gtk-sharp">
	<value name="Horizontal" label="Horizontal"
	       description="The widget is in horizontal orientation" />
	<value name="Vertical" label="Vertical"
	       description="The widget is in vertical orientation" />
    </enum>

    <enum type="Gtk.PackType,gtk-sharp">
	<value name="Start" label="Start"
	       description="The child is packed into the start (left or top) of the box" />
	<value name="End" label="End"
	       description="The child is packed into the end (right or bottom) of the box" />
    </enum>

    <enum type="Gtk.PolicyType,gtk-sharp">
	<value name="Always" label="Always"
	       description="The scrollbar is always visible" />
	<value name="Automatic" label="Automatic"
	       description="The scrollbar will appear and disappear as necessary" />
	<value name="Never" label="Never"
	       description="The scrollbar will never appear" />
    </enum>

    <enum type="Gtk.PositionType,gtk-sharp">
	<value name="Left" label="Left"
	       description="The feature is at the left edge" />
	<value name="Right" label="Right"
	       description="The feature is at the right edge" />
	<value name="Top" label="Top"
	       description="The feature is at the top edge" />
	<value name="Bottom" label="Bottom"
	       description="The feature is at the bottom edge" />
    </enum>

    <enum type="Gtk.ProgressBarOrientation,gtk-sharp">
	<value name="LeftToRight" label="Left to right"
	       description="A horizontal progress bar growing from left to right" />
	<value name="RightToLeft" label="Right to left"
	       description="A horizontal progress bar growing from right to left" />
	<value name="BottomToTop" label="Bottom to top"
	       description="A vertical progress bar growing from bottom to top" />
	<value name="TopToBottom" label="Top to bottom"
	       description="A vertical progress bar growing from top to bottom" />
    </enum>

    <enum type="Gtk.ReliefStyle,gtk-sharp">
	<value name="Normal" label="Normal"
	       description="Draw a normal relief around the button" />
	<value name="Half" label="Half"
	       description="Draw a half relief around the button" />
	<value name="None" label="None"
	       description="Draw no relief around the button" />
    </enum>

    <enum type="Gtk.ResponseType,gtk-sharp">
	<value name="None" label="None"
	       description="None" />
	<value name="Reject" label="Reject"
	       description="Reject" />
	<value name="Accept" label="Accept"
	       description="Accept" />
	<value name="DeleteEvent" />
	<value name="Ok" label="OK"
	       description="OK" />
	<value name="Cancel" label="Cancel"
	       description="Cancel" />
	<value name="Close" label="Close"
	       description="Close" />
	<value name="Yes" label="Yes"
	       description="Yes" />
	<value name="No" label="No"
	       description="No" />
	<value name="Apply" label="Apply"
	       description="Apply" />
	<value name="Help" label="Help"
	       description="Help" />
    </enum>

    <enum type="Gtk.ShadowType,gtk-sharp">
	<value name="None" label="None"
	       description="No outline" />
	<value name="In" label="In"
	       description="The outline is bevelled inwards" />
	<value name="Out" label="Out"
	       description="The outline is bevelled outwards, like a button" />
	<value name="EtchedIn" label="Etched in"
	       description="" />
	<value name="EtchedOut" label="Etched out"
	       description="" />
    </enum>

    <enum type="Gtk.SpinButtonUpdatePolicy,gtk-sharp">
	<value name="Always" label="Always"
	       description="When refreshing the SpinButton, the value is always displayed" />
	<value name="IfValid" label="If valid"
	       description="When refreshing the SpinButton, the value is only displayed if it is within the SpinButton's bounds" />
    </enum>

    <enum type="Gtk.ToolbarStyle,gtk-sharp">
	<value name="Icons" label="Icons"
	       description="Buttons display only icons in the toolbar" />
	<value name="Text" label="Text"
	       description="Buttons display only text labels in the toolbar" />
	<value name="Both" label="Both"
	       description="Buttons display text and icons in the toolbar" />
	<value name="BothHoriz" label="Both horizontally"
	       description="Buttons display icons and text alongside each other, rather than vertically stacked" />
    </enum>

    <enum type="Gtk.UpdateType,gtk-sharp">
	<value name="Continuous" label="Continuous"
	       description="The range value will change continuously as the slider is moved" />
	<value name="Discontinuous" label="Discontinuous"
	       description="The range value will change only after the user releases the mouse button" />
	<value name="Delayed" label="Delayed"
	       description="The range value will change if the user stops sliding the slider for a moment" />
    </enum>

    <enum type="Gtk.WindowPosition,gtk-sharp">
	<value name="None" label="Not specified"
	       description="The window can be placed wherever the window manager chooses" />
	<value name="Center" label="Centered"
	       description="The window should be placed in the center of the screen" />
	<value name="Mouse" label="At mouse position"
	       description="The window should be placed at the current mouse position" />
	<value name="CenterAlways" label="Always centered"
	       description="The window should be kept centered even if it changes size" />
	<value name="CenterOnParent" label="Centered on parent"
	       description="Center the window on the parent window that it is transient for" />
    </enum>

    <enum type="Gtk.WindowType,gtk-sharp">
	<value name="Toplevel" label="Toplevel"
	       description="A regular window or dialog" />
	<value name="Popup" label="Popup"
	       description="A special window such as a tooltip" />
    </enum>

    <enum type="Gtk.WrapMode,gtk-sharp">
	<value name="None" label="None"
	       description="Do not wrap lines; just make the text area wider" />
	<value name="Char" label="Character"
	       description="Wrap text, breaking lines between any characters" />
	<value name="Word" label="Word"
	       description="Wrap text, breaking lines between words" />
	<value name="WordChar" label="Word or Character"
	       description="Wrap text, preferably breaking lines between words, but also breaking between characters if needed" />
    </enum>

    <enum type="Stetic.Wrapper.Button+ButtonType">
	<value name="StockItem" label="Stock button"
	       description="Button displaying stock icon and text" />
	<value name="TextOnly" label="Text only"
	       description="Button displaying text only" />
	<value name="TextAndIcon" label="Text and Icon"
	       description="Button displaying an icon and application-provided text" />
	<value name="Custom" label="Custom"
	       description="Button with entirely custom contents" />
    </enum>

    <enum type="Stetic.Wrapper.ToolButton+ButtonType">
	<value name="StockItem" label="Stock button"
	       description="Button displaying stock icon and text" />
	<value name="TextAndIcon" label="Text and Icon"
	       description="Button displaying an icon and application-provided text" />
    </enum>

    <enum type="Stetic.Wrapper.Action+ActionType">
	<value name="Action" label="Action"
	       description="An normal action" />
	<value name="Toggle" label="Toggle Action"
	       description="The action can be toggled between two states" />
	<value name="Radio" label="Radio Action"
	       description="The action is controlled by a radio button" />
    </enum>

</objects>

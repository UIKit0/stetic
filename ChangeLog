2005-01-06  Dan Winship  <danw@novell.com>

	* stetic/IDesignTimeContainer.cs: New name for the old
	IWidgetSite.

	* stetic/WidgetSite.cs (IWidgetSite): Now a "parent" for
	WidgetSite and WindowSite.
	(WidgetSite): Implement IWidgetSite and IDesignTimeContainer.
	(WindowSite): IWidgetSite implementation for toplevel windows.
	Includes the focus-tracking code formerly in
	Stetic.Wrapper.Window.

	* stetic/ContextMenu.cs (ContextMenu):
	* stetic/Stetic.cs (Select):
	* stetic/PropertyGrid.cs (PropertyGrid.Select,
	ChildPropertyGrid.Select): Change WidgetBox and WidgetSite params
	to IWidgetSite. This lets us select and show properties for toplevels.

	* stetic/WidgetFactory.cs (WindowFactory.OnButtonPressEvent):
	Create a WindowSite for the new window and connect to its
	FocusChanged event.

	* stetic/wrapper/*.cs: s/IWidgetSite/IDesignTimeContainer/

	* stetic/wrapper/Window.cs (OnSetFocus): Gone. Handled by
	WindowSite now.

2005-01-05  Dan Winship  <danw@novell.com>

	* stetic/ContextMenu.cs: Menu subclass to use as a WidgetSite's
	context menu. Currently a clone of Glade's context menu, but with
	no widget-specific content, and it doesn't actually implement Cut,
	Copy, or Paste. (Meaning you can do Select or Delete.)

	* stetic/WidgetSite.cs (OnPopupMenu): create a ContextMenu and pop
	it up.
	(OnButtonPressEvent): Call OnPopupMenu() on a right-click.
	(OnKeyReleaseEvent): hand off Delete key handling to Delete()
	(Delete): new public method to delete the site's child.

	* stetic/PropertyDescriptor.cs (PropertyDescriptor): fix a bug in
	the sub-property case

2005-01-05  Dan Winship  <danw@novell.com>

	* stetic/IObjectWrapper.cs (IPropertySensitizer): interface for
	wrapper classes that want to be able to tweak the sensitivity of
	their editors.

	* stetic/Notify.cs: static helper class for the GObject "notify"
	signal, which isn't currently bound by glib-sharp.

	* stetic/PropertyDescriptor.cs (EventInfo, ParamSpec, EditorType):
	Make these be properties of the PropertyDescriptor rather than
	being figured out in PropertyEditors.

	* stetic/PropertyEditor.cs: Renamed from PropertyEditors.cs and
	made into an abstract widget class rather than a static class.
	(MakeEditor): Now returns a PropertyEditor rather than just a
	Widget.
	(BasicEditor, RangeEditor, NoEditor): Now subclasses of
	PropertyEditor, and they implement an Update() method to force the
	editor to sync with the underlying property.

	* stetic/PropertyGrid.cs: Tweak for PropertyDescriptor and
	PropertyEditor changes. Use IPropertySensitizer if the displayed
	widget supports it. Use Stetic.Notify to notice when the user
	interacts with the displayed widget (eg, toggling a checkbox) and
	force the relevant property editor to update itself.

	* stetic/ParamSpec.cs (ParamSpecTypeHack): add an unused private
	subclass of GLib.Object so we can access the static protected
	LookupGType method. (This wouldn't be needed if ParamSpec was in
	glib-sharp, because there's an internal method we could use.)
	(LookupObjectProperty, LookupChildProperty): Take a Type rather
	than a GLib.Object, so we can look up a type's properties without
	needing an instatiated object.

	* stetic/wrapper/Button.cs: Make the UI for the "Stock ID" and
	"Label" properties work more nicely by wrapping both of them at
	the Stetic.Wrapper.Button level, and watching for notifications on
	the UseStock property, and setting the wrapper Label to the stock
	item's Label rather than its Name when setting a stock item (eg,
	"_OK" rather than "gtk-ok"). Also add the UseStock property, and
	implement the IPropertySensitizer interface so that only one of
	Stock ID and Label is sensitive at any time.

	* stetic/editor/StockItem.cs: Remove the "None" option; the editor
	should be desensitized if no stock item is being used.

	* glue/notify.c: glue for Stetic.Notify

	* glue/paramspec.c (stetic_param_spec_for_property,
	stetic_param_spec_for_child_property): Take a GType rather than a
	GObject.

2004-12-20  Dan Winship  <danw@novell.com>

	* stetic/IObjectWrapper.cs: interface for Stetic.Wrapper objects
	to use to allow them to define their properties

	* stetic/PropertyDescriptor.cs: a class describing an editable
	object property

	* stetic/PropertyGrid.cs: Reimplement this using
	PropertyDescriptors and PropertyGroups for the model, and
	Gtk.Expanders for the view.

	* stetic/PropertyEditorAttribute.cs: for Stetic.Editors to use to
	specify the property and/or event to use to interact with them

	* stetic/PropertyEditors.cs: Updated for PropertyDescriptor, the
	Stetic.Editor namespace, etc

	* stetic/ParamSpec.cs: make Minimum, Maximum, Default virtual
	methods on ParamSpec itself, overridden by subclasses.

	* stetic/editor/Boolean.cs: 
	* stetic/editor/Char.cs: 
	* stetic/editor/Enumeration.cs: 
	* stetic/editor/FloatRange.cs: 
	* stetic/editor/IntRange.cs: 
	* stetic/editor/OptIntRange.cs: 
	* stetic/editor/StockItem.cs: 
	* stetic/editor/String.cs: Editors for properties of various types

	* stetic/wrapper/Arrow.cs: 
	* stetic/wrapper/Button.cs: 
	* stetic/wrapper/CheckButton.cs: 
	* stetic/wrapper/ComboBox.cs: 
	* stetic/wrapper/DrawingArea.cs: 
	* stetic/wrapper/Entry.cs: 
	* stetic/wrapper/HScrollbar.cs: 
	* stetic/wrapper/HSeparator.cs: 
	* stetic/wrapper/Label.cs: 
	* stetic/wrapper/RadioButton.cs: 
	* stetic/wrapper/VScrollbar.cs: 
	* stetic/wrapper/VSeparator.cs: IObjectWrapper implementations

	* stetic/wrapper/Misc.cs: 
	* stetic/wrapper/Range.cs: 
	* stetic/wrapper/Widget.cs: static classes defining certain
	PropertyGroups

	* stetic/wrapper/HBox.cs:
	* stetic/wrapper/HPaned.cs:
	* stetic/wrapper/Table.cs:
	* stetic/wrapper/VBox.cs:
	* stetic/wrapper/VPaned.cs:
	* stetic/wrapper/Window.cs: s/Widget/Gtk.Widget/ since there is
	now a Stetic.Wrapper.Widget

	* stetic/wrapper/DefaultWidgets.cs: use the new wrappers

	* stetic/Makefile.am (stetic_exe_SOURCES): update

	* stetic/stetic.in: pass --debug to mono

2004-12-20  Dan Winship  <danw@novell.com>

	* stetic/wrapper: Rename "wrappers" dir to "wrapper", to match the
	namespace

	* stetic/Makefile.am (stetic_exe_SOURCES): update for that

2004-12-15  Dan Winship  <danw@novell.com>

	* stetic/Stetic.cs: 
	* stetic/WidgetSite.cs: 
	* stetic/wrappers/Table.cs: Clean up new mcs warnings

	* stetic/PropertyEditors.cs (Enum): Redo this using ComboBox to
	avoid the warning about OptionMenu being deprecated
	(Flags): Make this a no-op for now. The OptionMenu-based
	implementation wasn't very useful anyway.

2004-12-14  Dan Winship  <danw@novell.com>

	* stetic/*Wrapper.cs: Move these all to stetic/wrappers and rename

	* stetic/DefaultWidgets.cs: Moved out of stetic/WidgetFactory.cs

	* stetic/Makefile.am (stetic_exe_SOURCES): Update

2004-12-13  Dan Winship  <danw@novell.com>

	* stetic/PropertyEditors.cs (Enum, Flags): implement these by
	using private classes rather than anonymous delegates, to work
	around 69614.

	* stetic/TableWrapper.cs: fix a search-and-replace-o ("placesite"
	instead of "placeholder")
	(Sync): Don't adjust expand/fill settings of occupied sites.
	(ChildOccupancyChanged): When a site becomes occupied, reset its
	attach options.

2004-12-10  Dan Winship  <danw@novell.com>

	* stetic/WidgetBox.cs: Always have a GdkWindow, so that the
	background of a container can be clicked on to select it (if any
	background is visible). Fix up coordinate handling accordingly.

	* stetic/WidgetFactory.cs (DefaultWidgets): add VButtonBox and
	HButtonBox.

	* stetic/Makefile.am (stetic_exe_SOURCES): add
	HButtonBoxWrapper.cs, VButtonBoxWrapper.cs
	(stetic.exe): Use -pkg:gtk-sharp-2.0 rather than the output we
	already cached in configure.in, because Miggie says so. :)
	
2004-12-08  Dan Winship  <danw@novell.com>

	* Initial commit


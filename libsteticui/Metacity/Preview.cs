// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Metacity {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	internal  class Preview : Gtk.Bin {

		~Preview()
		{
			Dispose();
		}

		[Obsolete]
		protected Preview(GLib.GType gtype) : base(gtype) {}
		public Preview(IntPtr raw) : base(raw) {}

		[DllImport("libmetacity-private.so.0")]
		static extern IntPtr meta_preview_new();

		public Preview () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (Preview)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				return;
			}
			Raw = meta_preview_new();
		}

		[DllImport("libmetacity-private.so.0")]
		static extern void meta_preview_set_title(IntPtr raw, IntPtr title);

		public string Title {
			set  {
				IntPtr title_as_native = GLib.Marshaller.StringToPtrGStrdup (value);
				meta_preview_set_title(Handle, title_as_native);
				GLib.Marshaller.Free (title_as_native);
			}
		}

		[DllImport("libmetacity-private.so.0")]
		static extern void meta_preview_set_button_layout(IntPtr raw, ref Metacity.ButtonLayout button_layout);

		public Metacity.ButtonLayout ButtonLayout {
			set  {
				meta_preview_set_button_layout(Handle, ref value);
			}
		}

		[DllImport("libmetacity-private.so.0")]
		static extern void meta_preview_set_theme(IntPtr raw, IntPtr theme);

		public Metacity.Theme Theme {
			set  {
				meta_preview_set_theme(Handle, (value == null ? IntPtr.Zero : value.Handle));
			}
		}

		[DllImport("libmetacity-private.so.0")]
		static extern IntPtr meta_preview_get_mini_icon();

		public static Gdk.Pixbuf MiniIcon { 
			get {
				IntPtr raw_ret = meta_preview_get_mini_icon();
				Gdk.Pixbuf ret = GLib.Object.GetObject(raw_ret) as Gdk.Pixbuf;
				return ret;
			}
		}

		[DllImport("libmetacity-private.so.0")]
		static extern IntPtr meta_preview_get_icon();

		public static Gdk.Pixbuf Icon { 
			get {
				IntPtr raw_ret = meta_preview_get_icon();
				Gdk.Pixbuf ret = GLib.Object.GetObject(raw_ret) as Gdk.Pixbuf;
				return ret;
			}
		}

		[DllImport("libmetacity-private.so.0")]
		static extern void meta_preview_set_frame_type(IntPtr raw, int type);

		public Metacity.FrameType FrameType { 
			set {
				meta_preview_set_frame_type(Handle, (int) value);
			}
		}

		[DllImport("libmetacity-private.so.0")]
		static extern IntPtr meta_preview_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = meta_preview_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("libmetacity-private.so.0")]
		static extern void meta_preview_set_frame_flags(IntPtr raw, int flags);

		public Metacity.FrameFlags FrameFlags { 
			set {
				meta_preview_set_frame_flags(Handle, (int) value);
			}
		}


		static Preview ()
		{
			GtkSharp.MetacitySharp.ObjectManager.Initialize ();
		}
#endregion
	}
}
